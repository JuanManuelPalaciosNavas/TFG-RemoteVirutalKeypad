{"ast":null,"code":"import _classCallCheck from \"/home/juanma/Documentos/TecladoVirtual/TFG Angular template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/juanma/Documentos/TecladoVirtual/TFG Angular template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate } from 'tslib';\nimport { Injectable, ChangeDetectorRef, Input, Component, ChangeDetectionStrategy, Pipe, ElementRef, Directive, ViewContainerRef, Injector, ComponentFactoryResolver, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { createCustomElement } from '@angular/elements';\nimport { Input as Input$1 } from 'rete';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction NodeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 6);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"rete-socket\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var output_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(output_r3.name);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"io\", output_r3)(\"socket\", output_r3.socket);\n  }\n}\n\nfunction NodeComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 8);\n  }\n\n  if (rf & 2) {\n    var control_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"rete-control\", control_r4);\n  }\n}\n\nfunction NodeComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var input_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(input_r5.name);\n  }\n}\n\nfunction NodeComponent_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 13);\n  }\n\n  if (rf & 2) {\n    var input_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"rete-control\", input_r5.control);\n  }\n}\n\nfunction NodeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵelement(1, \"rete-socket\", 7);\n    ɵngcc0.ɵɵtemplate(2, NodeComponent_div_6_div_2_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(3, NodeComponent_div_6_div_3_Template, 1, 1, \"div\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var input_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"io\", input_r5)(\"socket\", input_r5.socket);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !input_r5.showControl());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", input_r5.showControl());\n  }\n}\n\nvar _c0 = function _c0(a0, a1) {\n  return [a0, a1];\n};\n\nfunction SocketComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 1);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c0, ctx_r0.type, ctx_r0.socket.name))(\"title\", ctx_r0.socket.name);\n  }\n}\n\nvar NodeService = /*#__PURE__*/function () {\n  function NodeService() {\n    _classCallCheck(this, NodeService);\n  }\n\n  _createClass(NodeService, [{\n    key: \"setBindings\",\n    value: function setBindings(bindSocket, bindControl) {\n      this.bindSocket = bindSocket;\n      this.bindControl = bindControl;\n    }\n  }]);\n\n  return NodeService;\n}();\n\nNodeService.ɵfac = function NodeService_Factory(t) {\n  return new (t || NodeService)();\n};\n\nNodeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NodeService,\n  factory: function factory(t) {\n    return NodeService.ɵfac(t);\n  }\n});\n\nvar NodeComponent = /*#__PURE__*/function () {\n  function NodeComponent(service, cdr) {\n    _classCallCheck(this, NodeComponent);\n\n    this.service = service;\n    this.cdr = cdr;\n  }\n\n  _createClass(NodeComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.service.setBindings(this.bindSocket, this.bindControl);\n\n      this.node.update = function () {\n        return _this.cdr.detectChanges();\n      };\n    }\n  }, {\n    key: \"inputs\",\n    get: function get() {\n      return Array.from(this.node.inputs.values());\n    }\n  }, {\n    key: \"outputs\",\n    get: function get() {\n      return Array.from(this.node.outputs.values());\n    }\n  }, {\n    key: \"controls\",\n    get: function get() {\n      return Array.from(this.node.controls.values());\n    }\n  }, {\n    key: \"selected\",\n    value: function selected() {\n      return this.editor.selected.contains(this.node) ? 'selected' : '';\n    }\n  }]);\n\n  return NodeComponent;\n}();\n\nNodeComponent.ɵfac = function NodeComponent_Factory(t) {\n  return new (t || NodeComponent)(ɵngcc0.ɵɵdirectiveInject(NodeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNodeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NodeComponent,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    editor: \"editor\",\n    node: \"node\",\n    bindSocket: \"bindSocket\",\n    bindControl: \"bindControl\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NodeService])],\n  decls: 7,\n  vars: 10,\n  consts: [[1, \"node\", 3, \"ngClass\"], [1, \"title\"], [\"class\", \"output\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"control\", 3, \"rete-control\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"input\", 4, \"ngFor\", \"ngForOf\"], [1, \"output\"], [1, \"output-title\"], [\"rete-socket\", \"\", 3, \"io\", \"socket\"], [1, \"control\", 3, \"rete-control\"], [1, \"input\"], [\"class\", \"input-title\", 4, \"ngIf\"], [\"class\", \"input-control\", 3, \"rete-control\", 4, \"ngIf\"], [1, \"input-title\"], [1, \"input-control\", 3, \"rete-control\"]],\n  template: function NodeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵpipe(1, \"kebab\");\n      ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n      ɵngcc0.ɵɵtext(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, NodeComponent_div_4_Template, 4, 3, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(5, NodeComponent_div_5_Template, 1, 1, \"div\", 3);\n      ɵngcc0.ɵɵtemplate(6, NodeComponent_div_6_Template, 4, 4, \"div\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpipeBind1(1, 5, ɵngcc0.ɵɵpureFunction2(7, _c0, ctx.selected(), ctx.node.name)));\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵtextInterpolate(ctx.node.name);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.outputs);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.controls);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.inputs);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgClass, ɵngcc1.NgForOf, SocketComponent, SocketDirective, ControlDirective, ɵngcc1.NgIf];\n  },\n  pipes: function pipes() {\n    return [KebabPipe];\n  },\n  styles: [\".node[_ngcontent-%COMP%]{background:rgba(110,136,255,.8);border:2px solid #4e58bf;border-radius:10px;cursor:pointer;min-width:180px;height:auto;padding-bottom:6px;box-sizing:content-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.node[_ngcontent-%COMP%]:hover{background:rgba(130,153,255,.8)}.node.selected[_ngcontent-%COMP%]{background:#ffd92c;border-color:#e3c000}.node[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{color:#fff;font-family:sans-serif;font-size:18px;padding:8px}.node[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]{text-align:right}.node[_ngcontent-%COMP%]   .input[_ngcontent-%COMP%]{text-align:left}.node[_ngcontent-%COMP%]   .input-title[_ngcontent-%COMP%], .node[_ngcontent-%COMP%]   .output-title[_ngcontent-%COMP%]{vertical-align:middle;color:#fff;display:inline-block;font-family:sans-serif;font-size:14px;margin:6px;line-height:24px}.node[_ngcontent-%COMP%]   .input-title[hidden][_ngcontent-%COMP%], .node[_ngcontent-%COMP%]   .output-title[hidden][_ngcontent-%COMP%]{display:none}.node[_ngcontent-%COMP%]   .input-control[_ngcontent-%COMP%]{z-index:1;width:calc(100% - 36px);vertical-align:middle;display:inline-block}.node[_ngcontent-%COMP%]   .control[_ngcontent-%COMP%]{padding:6px 18px}\"],\n  changeDetection: 0\n});\n\nNodeComponent.ctorParameters = function () {\n  return [{\n    type: NodeService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], NodeComponent.prototype, \"editor\", void 0);\n\n__decorate([Input()], NodeComponent.prototype, \"node\", void 0);\n\n__decorate([Input()], NodeComponent.prototype, \"bindSocket\", void 0);\n\n__decorate([Input()], NodeComponent.prototype, \"bindControl\", void 0);\n\nvar KebabPipe = /*#__PURE__*/function () {\n  function KebabPipe() {\n    _classCallCheck(this, KebabPipe);\n  }\n\n  _createClass(KebabPipe, [{\n    key: \"replace\",\n    value: function replace(s) {\n      return s.toLowerCase().replace(/ /g, '-');\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(value) {\n      var _this2 = this;\n\n      return Array.isArray(value) ? value.map(function (s) {\n        return _this2.replace(s);\n      }) : this.replace(value);\n    }\n  }]);\n\n  return KebabPipe;\n}();\n\nKebabPipe.ɵfac = function KebabPipe_Factory(t) {\n  return new (t || KebabPipe)();\n};\n\nKebabPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({\n  name: \"kebab\",\n  type: KebabPipe,\n  pure: true\n});\n\nvar SocketComponent = /*#__PURE__*/function () {\n  function SocketComponent() {\n    _classCallCheck(this, SocketComponent);\n  }\n\n  _createClass(SocketComponent, [{\n    key: \"type\",\n    get: function get() {\n      return this.io instanceof Input$1 ? 'input' : 'output';\n    }\n  }]);\n\n  return SocketComponent;\n}();\n\nSocketComponent.ɵfac = function SocketComponent_Factory(t) {\n  return new (t || SocketComponent)();\n};\n\nSocketComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SocketComponent,\n  selectors: [[\"rete-socket\"]],\n  inputs: {\n    socket: \"socket\",\n    io: \"io\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"socket\", 3, \"ngClass\", \"title\", 4, \"ngIf\"], [1, \"socket\", 3, \"ngClass\", \"title\"]],\n  template: function SocketComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, SocketComponent_div_0_Template, 1, 5, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.socket);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgClass],\n  styles: [\"[_nghost-%COMP%]{display:inline-block}.socket[_ngcontent-%COMP%]{display:inline-block;cursor:pointer;border:1px solid #fff;border-radius:12px;width:24px;height:24px;margin:6px;vertical-align:middle;background:#96b38a;z-index:2;box-sizing:border-box}.socket[_ngcontent-%COMP%]:hover{border-width:4px}.socket.multiple[_ngcontent-%COMP%]{border-color:#ff0}.socket.output[_ngcontent-%COMP%]{margin-right:-12px}.socket.input[_ngcontent-%COMP%]{margin-left:-12px}\"],\n  changeDetection: 0\n});\n\n__decorate([Input()], SocketComponent.prototype, \"socket\", void 0);\n\n__decorate([Input()], SocketComponent.prototype, \"io\", void 0);\n\nvar ControlDirective = /*#__PURE__*/function () {\n  function ControlDirective(el, service) {\n    _classCallCheck(this, ControlDirective);\n\n    this.el = el;\n    this.service = service;\n  }\n\n  _createClass(ControlDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.service.bindControl(this.el.nativeElement, this.control);\n    }\n  }]);\n\n  return ControlDirective;\n}();\n\nControlDirective.ɵfac = function ControlDirective_Factory(t) {\n  return new (t || ControlDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NodeService));\n};\n\nControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ControlDirective,\n  selectors: [[\"\", \"rete-control\", \"\"]],\n  inputs: {\n    control: [\"rete-control\", \"control\"]\n  }\n});\n\nControlDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NodeService\n  }];\n};\n\n__decorate([Input('rete-control')], ControlDirective.prototype, \"control\", void 0);\n\nvar SocketDirective = /*#__PURE__*/function () {\n  function SocketDirective(el, service) {\n    _classCallCheck(this, SocketDirective);\n\n    this.el = el;\n    this.service = service;\n  }\n\n  _createClass(SocketDirective, [{\n    key: \"type\",\n    get: function get() {\n      return this.io instanceof Input$1 ? 'input' : 'output';\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.service.bindSocket(this.el.nativeElement, this.type, this.io);\n    }\n  }]);\n\n  return SocketDirective;\n}();\n\nSocketDirective.ɵfac = function SocketDirective_Factory(t) {\n  return new (t || SocketDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NodeService));\n};\n\nSocketDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SocketDirective,\n  selectors: [[\"\", \"rete-socket\", \"\"]],\n  inputs: {\n    io: \"io\"\n  }\n});\n\nSocketDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NodeService\n  }];\n};\n\n__decorate([Input()], SocketDirective.prototype, \"io\", void 0);\n\nvar CustomComponent = /*#__PURE__*/function () {\n  function CustomComponent(vcr, injector, factoryResolver) {\n    _classCallCheck(this, CustomComponent);\n\n    this.vcr = vcr;\n    this.injector = injector;\n    this.factoryResolver = factoryResolver;\n  }\n\n  _createClass(CustomComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var factory = this.factoryResolver.resolveComponentFactory(this.component);\n      var componentRef = factory.create(this.injector);\n      var props = this.props;\n\n      var _loop = function _loop(key) {\n        Object.defineProperty(componentRef.instance, key, {\n          get: function get() {\n            return props[key];\n          },\n          set: function set(val) {\n            props[key] = val;\n          }\n        });\n      };\n\n      for (var key in props) {\n        _loop(key);\n      }\n\n      this.vcr.insert(componentRef.hostView);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.vcr.detach(0);\n    }\n  }]);\n\n  return CustomComponent;\n}();\n\nCustomComponent.ɵfac = function CustomComponent_Factory(t) {\n  return new (t || CustomComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver));\n};\n\nCustomComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CustomComponent,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    component: \"component\",\n    props: \"props\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function CustomComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nCustomComponent.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }];\n};\n\n__decorate([Input()], CustomComponent.prototype, \"component\", void 0);\n\n__decorate([Input()], CustomComponent.prototype, \"props\", void 0);\n\nvar ReteModule = function ReteModule(injector) {\n  _classCallCheck(this, ReteModule);\n\n  var CustomElement = createCustomElement(CustomComponent, {\n    injector: injector\n  });\n  if (!customElements.get('rete-element')) customElements.define('rete-element', CustomElement);\n};\n\nReteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ReteModule\n});\nReteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ReteModule_Factory(t) {\n    return new (t || ReteModule)(ɵngcc0.ɵɵinject(ɵngcc0.Injector));\n  },\n  providers: [KebabPipe, ControlDirective],\n  imports: [[CommonModule]]\n});\n\nReteModule.ctorParameters = function () {\n  return [{\n    type: Injector\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NodeService, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NodeComponent, [{\n    type: Component,\n    args: [{\n      template: \"<div class=\\\"node\\\" [ngClass]=\\\"[selected(), node.name] | kebab\\\">\\n    <div class=\\\"title\\\">{{node.name}}</div>\\n    <div class=\\\"output\\\" *ngFor=\\\"let output of outputs\\\">\\n        <div class=\\\"output-title\\\">{{output.name}}</div>\\n        <rete-socket rete-socket [io]=\\\"output\\\" [socket]=\\\"output.socket\\\"></rete-socket>\\n    </div>\\n    <div class=\\\"control\\\" *ngFor=\\\"let control of controls\\\" [rete-control]=\\\"control\\\"></div>\\n    <div class=\\\"input\\\" *ngFor=\\\"let input of inputs\\\">\\n        <rete-socket rete-socket [io]=\\\"input\\\" [socket]=\\\"input.socket\\\"></rete-socket>\\n        <div class=\\\"input-title\\\" *ngIf=\\\"!input.showControl()\\\">{{input.name}}</div>\\n        <div class=\\\"input-control\\\" *ngIf=\\\"input.showControl()\\\" [rete-control]=\\\"input.control\\\"></div>\\n    </div>\\n</div>\",\n      providers: [NodeService],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".node{background:rgba(110,136,255,.8);border:2px solid #4e58bf;border-radius:10px;cursor:pointer;min-width:180px;height:auto;padding-bottom:6px;box-sizing:content-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.node:hover{background:rgba(130,153,255,.8)}.node.selected{background:#ffd92c;border-color:#e3c000}.node .title{color:#fff;font-family:sans-serif;font-size:18px;padding:8px}.node .output{text-align:right}.node .input{text-align:left}.node .input-title,.node .output-title{vertical-align:middle;color:#fff;display:inline-block;font-family:sans-serif;font-size:14px;margin:6px;line-height:24px}.node .input-title[hidden],.node .output-title[hidden]{display:none}.node .input-control{z-index:1;width:calc(100% - 36px);vertical-align:middle;display:inline-block}.node .control{padding:6px 18px}\"]\n    }]\n  }], function () {\n    return [{\n      type: NodeService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    editor: [{\n      type: Input\n    }],\n    node: [{\n      type: Input\n    }],\n    bindSocket: [{\n      type: Input\n    }],\n    bindControl: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(KebabPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'kebab'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SocketComponent, [{\n    type: Component,\n    args: [{\n      selector: 'rete-socket',\n      template: \"<div *ngIf=\\\"socket\\\" class=\\\"socket\\\" [ngClass]=\\\"[type, socket.name]\\\" [title]=\\\"socket.name\\\"></div>\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\":host{display:inline-block}.socket{display:inline-block;cursor:pointer;border:1px solid #fff;border-radius:12px;width:24px;height:24px;margin:6px;vertical-align:middle;background:#96b38a;z-index:2;box-sizing:border-box}.socket:hover{border-width:4px}.socket.multiple{border-color:#ff0}.socket.output{margin-right:-12px}.socket.input{margin-left:-12px}\"]\n    }]\n  }], null, {\n    socket: [{\n      type: Input\n    }],\n    io: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ControlDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[rete-control]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NodeService\n    }];\n  }, {\n    control: [{\n      type: Input,\n      args: ['rete-control']\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SocketDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[rete-socket]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NodeService\n    }];\n  }, {\n    io: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CustomComponent, [{\n    type: Component,\n    args: [{\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }];\n  }, {\n    component: [{\n      type: Input\n    }],\n    props: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReteModule, {\n    declarations: function declarations() {\n      return [NodeComponent, SocketComponent, CustomComponent, ControlDirective, SocketDirective, KebabPipe];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NodeComponent, CustomComponent, SocketComponent, ControlDirective, SocketDirective, KebabPipe];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ReteModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NodeComponent, SocketComponent, CustomComponent, ControlDirective, SocketDirective, KebabPipe],\n      imports: [CommonModule],\n      providers: [KebabPipe, ControlDirective],\n      exports: [NodeComponent, CustomComponent, SocketComponent, ControlDirective, SocketDirective, KebabPipe],\n      entryComponents: [NodeComponent, SocketComponent, CustomComponent]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Injector\n    }];\n  }, null);\n})();\n\nfunction install(editor) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  editor.on('rendernode', function (_ref) {\n    var el = _ref.el,\n        node = _ref.node,\n        component = _ref.component,\n        bindControl = _ref.bindControl,\n        bindSocket = _ref.bindSocket;\n    var ngComponent = component;\n    if (ngComponent.render && ngComponent.render !== 'angular') return;\n    var element = document.createElement('rete-element');\n    var props = element;\n    props.component = ngComponent.component || params.component || NodeComponent;\n    props.props = Object.assign({}, ngComponent.props || {}, {\n      node: node,\n      editor: editor,\n      bindControl: bindControl,\n      bindSocket: bindSocket\n    });\n    el.appendChild(element);\n  });\n  editor.on('rendercontrol', function (_ref2) {\n    var el = _ref2.el,\n        control = _ref2.control;\n    var ngControl = control;\n    if (ngControl.render && ngControl.render !== 'angular') return;\n    var element = document.createElement('rete-element');\n    var props = element;\n    props.component = ngControl.component;\n    props.props = ngControl.props;\n    el.appendChild(element);\n  });\n  editor.on(['connectioncreated', 'connectionremoved'], function (connection) {\n    connection.output.node.update();\n    connection.input.node.update();\n  });\n  editor.on('nodeselected', function () {\n    editor.nodes.forEach(function (n) {\n      return n.update();\n    });\n  });\n}\n\nvar AngularRenderPlugin = {\n  name: 'angular-render',\n  install: install\n};\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularRenderPlugin, NodeComponent, NodeService, ReteModule, SocketComponent, CustomComponent as ɵa, ControlDirective as ɵb, SocketDirective as ɵc, KebabPipe as ɵd };","map":{"version":3,"sources":["rete-angular-render-plugin/node.service.ts","rete-angular-render-plugin/node/node.component.ts","rete-angular-render-plugin/kebab.pipe.ts","rete-angular-render-plugin/socket/socket.component.ts","rete-angular-render-plugin/control.directive.ts","rete-angular-render-plugin/socket.directive.ts","rete-angular-render-plugin/custom.component.ts","rete-angular-render-plugin/module.ts","rete-angular-render-plugin/index.ts","rete-angular-render-plugin/rete-angular-render-plugin.ts"],"names":["tslib_1.__decorate","ReteInput"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BindControl, BindSocket } from './types';\n\n@Injectable()\nexport class NodeService {\n  public bindSocket: BindSocket;\n  public bindControl: BindControl;\n  \n  setBindings(bindSocket, bindControl) {\n    this.bindSocket = bindSocket;\n    this.bindControl = bindControl;\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NodeEditor, Node, Input as ReteInput, Output as ReteOutput, Control as ReteControl } from 'rete';\nimport { NodeService } from '../node.service';\n\n@Component({\n  templateUrl: './node.component.html',\n  styleUrls: ['./node.component.sass'],\n  providers: [NodeService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NodeComponent {\n  @Input() editor!: NodeEditor;\n  @Input() node!: Node;\n  @Input() bindSocket!: Function;\n  @Input() bindControl!: Function;\n\n  constructor(protected service: NodeService, protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.service.setBindings(this.bindSocket, this.bindControl);\n    this.node.update = () => this.cdr.detectChanges();\n  }\n\n  get inputs() {\n    return Array.from(this.node.inputs.values());\n  }\n\n  get outputs() {\n    return Array.from(this.node.outputs.values());\n  }\n\n  get controls() {\n    return Array.from(this.node.controls.values());\n  }\n\n  selected() {\n    return this.editor.selected.contains(this.node) ? 'selected' : '';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\ntype ClassAttr = string | string[];\n\n@Pipe({name: 'kebab'})\nexport class KebabPipe implements PipeTransform {\n\n  replace(s: string) {\n    return s.toLowerCase().replace(/ /g, '-');\n  }\n\n  transform(value: ClassAttr): ClassAttr {\n    return Array.isArray(value) ? value.map(s => this.replace(s)) : this.replace(value);\n  }\n}","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Socket, IO, Input as ReteInput } from 'rete';\nimport { SocketType } from '../types';\n\n@Component({\n  selector: 'rete-socket',\n  template: `<div *ngIf=\"socket\" class=\"socket\" [ngClass]=\"[type, socket.name]\" [title]=\"socket.name\"></div>`,\n  styleUrls: ['./socket.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SocketComponent {\n  @Input() socket!: Socket;\n  @Input() io!: IO;\n\n  get type(): SocketType {\n    return this.io instanceof ReteInput ? 'input' : 'output';\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { Control } from 'rete';\nimport { NodeService } from './node.service';\n\n@Directive({\n  selector: '[rete-control]'\n})\nexport class ControlDirective implements OnInit {\n  @Input('rete-control') control!: Control;\n\n  constructor(private el: ElementRef, private service: NodeService) {}\n\n  ngOnInit() {\n    this.service.bindControl(this.el.nativeElement, this.control);\n  }\n}\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\nimport { IO, Input as ReteInput } from 'rete';\nimport { NodeService } from './node.service';\nimport { SocketType } from './types';\n\n@Directive({\n  selector: '[rete-socket]'\n})\nexport class SocketDirective implements OnInit {\n    @Input() io!: IO;\n  \n    constructor(private el: ElementRef, private service: NodeService) {}\n  \n    get type(): SocketType {\n      return this.io instanceof ReteInput ? 'input' : 'output';\n    }\n  \n    ngOnInit() {\n      this.service.bindSocket(this.el.nativeElement, this.type, this.io);\n    }\n}\n","import { Component, Input, OnInit, Injector, ComponentFactoryResolver, ViewContainerRef, Type, ChangeDetectionStrategy } from '@angular/core';\nimport { Props } from './types';\n\n@Component({\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomComponent implements OnInit {\n  @Input() component!: Type<Component>;\n  @Input() props!: Props;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private injector: Injector,\n    private factoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    const factory = this.factoryResolver.resolveComponentFactory(this.component);\n    const componentRef = factory.create(this.injector);\n    const { props } = this;\n\n    for(let key in props) {\n      Object.defineProperty(componentRef.instance, key, {\n        get() { return props[key]; },\n        set(val) { props[key] = val; }\n      })\n    }\n\n    this.vcr.insert(componentRef.hostView);\n  }\n\n  ngOnDestroy() {\n    this.vcr.detach(0);\n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { createCustomElement } from '@angular/elements';\n\nimport { KebabPipe } from './kebab.pipe';\nimport { NodeComponent } from './node/node.component';\nimport { SocketComponent } from './socket/socket.component';\nimport { ControlDirective } from './control.directive';\nimport { SocketDirective } from './socket.directive';\nimport { CustomComponent } from './custom.component';\n\n@NgModule({\n  declarations: [\n    NodeComponent,\n    SocketComponent,\n    CustomComponent,\n    ControlDirective,\n    SocketDirective,\n    KebabPipe,\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    KebabPipe,\n    ControlDirective\n  ],\n  exports: [\n    NodeComponent,\n    CustomComponent,\n    SocketComponent,\n    ControlDirective,\n    SocketDirective,\n    KebabPipe\n  ],\n  entryComponents: [\n    NodeComponent,\n    SocketComponent,\n    CustomComponent\n  ]\n})\nexport class ReteModule {\n  constructor(injector: Injector) { // StaticInjectorError due to 'npm link'\n    const CustomElement = createCustomElement(CustomComponent, { injector });\n    if (!customElements.get('rete-element')) customElements.define('rete-element', CustomElement);\n  }\n}\n","import { Type } from '@angular/core';\nimport { NodeEditor } from 'rete';\nimport { AngularControl, ElementProps, AngularComponentData } from './types';\nimport { NodeComponent } from './node/node.component';\n\nfunction install(editor: NodeEditor, params : { component?: Type<any> } = {}) {\n    editor.on('rendernode', ({ el, node, component, bindControl, bindSocket }) => {\n        const ngComponent = component as unknown as AngularComponentData;\n\n        if (ngComponent.render && ngComponent.render !== 'angular') return;\n\n        const element = document.createElement('rete-element');\n        const props: ElementProps = element as any;\n\n        props.component = ngComponent.component || params.component || NodeComponent;\n        props.props = Object.assign({}, ngComponent.props || {}, {\n            node,\n            editor,\n            bindControl,\n            bindSocket\n        });\n\n        el.appendChild(element);\n    });\n\n    editor.on('rendercontrol', ({ el, control }) => {\n        const ngControl = control as unknown as AngularControl;\n\n        if (ngControl.render && ngControl.render !== 'angular') return;\n\n        const element = document.createElement('rete-element');\n        const props: ElementProps = element as any;\n\n        props.component = ngControl.component;\n        props.props = ngControl.props;\n\n        el.appendChild(element);\n    });\n    editor.on(['connectioncreated', 'connectionremoved'], connection => {\n        connection.output.node.update();\n        connection.input.node.update();\n    });\n    editor.on('nodeselected', () => {\n        editor.nodes.forEach(n => n.update());\n    });\n}\n\nexport const AngularRenderPlugin = {\n    name: 'angular-render',\n    install\n};\nexport { ReteModule } from './module';\nexport * from './types';\nexport { NodeService } from './node.service';\nexport { NodeComponent } from './node/node.component';\nexport { SocketComponent } from './socket/socket.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ControlDirective as Éµb} from './control.directive';\nexport {CustomComponent as Éµa} from './custom.component';\nexport {KebabPipe as Éµd} from './kebab.pipe';\nexport {SocketDirective as Éµc} from './socket.directive';"]},"metadata":{},"sourceType":"module"}