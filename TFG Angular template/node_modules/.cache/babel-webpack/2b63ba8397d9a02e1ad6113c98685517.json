{"ast":null,"code":"'use strict'; // Protocol references:\n// \n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75\n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76\n// * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17\n\nvar Base = require('./driver/base'),\n    Client = require('./driver/client'),\n    Server = require('./driver/server');\n\nvar Driver = {\n  client: function client(url, options) {\n    options = options || {};\n    if (options.masking === undefined) options.masking = true;\n    return new Client(url, options);\n  },\n  server: function server(options) {\n    options = options || {};\n    if (options.requireMasking === undefined) options.requireMasking = true;\n    return new Server(options);\n  },\n  http: function http() {\n    return Server.http.apply(Server, arguments);\n  },\n  isSecureRequest: function isSecureRequest(request) {\n    return Server.isSecureRequest(request);\n  },\n  isWebSocket: function isWebSocket(request) {\n    if (request.method !== 'GET') return false;\n    var connection = request.headers.connection || '',\n        upgrade = request.headers.upgrade || '';\n    return request.method === 'GET' && connection.toLowerCase().split(/ *, */).indexOf('upgrade') >= 0 && upgrade.toLowerCase() === 'websocket';\n  },\n  validateOptions: function validateOptions(options, validKeys) {\n    Base.validateOptions(options, validKeys);\n  }\n};\nmodule.exports = Driver;","map":{"version":3,"sources":["/home/juanma/Documentos/TecladoVirtual/TFG Angular template/node_modules/websocket-driver/lib/websocket/driver.js"],"names":["Base","require","Client","Server","Driver","client","url","options","masking","undefined","server","requireMasking","http","apply","arguments","isSecureRequest","request","isWebSocket","method","connection","headers","upgrade","toLowerCase","split","indexOf","validateOptions","validKeys","module","exports"],"mappings":"AAAA,a,CAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAKC,OAAO,CAAC,eAAD,CAApB;AAAA,IACIC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CADpB;AAAA,IAEIE,MAAM,GAAGF,OAAO,CAAC,iBAAD,CAFpB;;AAIA,IAAIG,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,gBAASC,GAAT,EAAcC,OAAd,EAAuB;AAC7BA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,QAAIA,OAAO,CAACC,OAAR,KAAoBC,SAAxB,EAAmCF,OAAO,CAACC,OAAR,GAAkB,IAAlB;AACnC,WAAO,IAAIN,MAAJ,CAAWI,GAAX,EAAgBC,OAAhB,CAAP;AACD,GALU;AAOXG,EAAAA,MAAM,EAAE,gBAASH,OAAT,EAAkB;AACxBA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,QAAIA,OAAO,CAACI,cAAR,KAA2BF,SAA/B,EAA0CF,OAAO,CAACI,cAAR,GAAyB,IAAzB;AAC1C,WAAO,IAAIR,MAAJ,CAAWI,OAAX,CAAP;AACD,GAXU;AAaXK,EAAAA,IAAI,EAAE,gBAAW;AACf,WAAOT,MAAM,CAACS,IAAP,CAAYC,KAAZ,CAAkBV,MAAlB,EAA0BW,SAA1B,CAAP;AACD,GAfU;AAiBXC,EAAAA,eAAe,EAAE,yBAASC,OAAT,EAAkB;AACjC,WAAOb,MAAM,CAACY,eAAP,CAAuBC,OAAvB,CAAP;AACD,GAnBU;AAqBXC,EAAAA,WAAW,EAAE,qBAASD,OAAT,EAAkB;AAC7B,QAAIA,OAAO,CAACE,MAAR,KAAmB,KAAvB,EAA8B,OAAO,KAAP;AAE9B,QAAIC,UAAU,GAAGH,OAAO,CAACI,OAAR,CAAgBD,UAAhB,IAA8B,EAA/C;AAAA,QACIE,OAAO,GAAML,OAAO,CAACI,OAAR,CAAgBC,OAAhB,IAA2B,EAD5C;AAGA,WAAOL,OAAO,CAACE,MAAR,KAAmB,KAAnB,IACAC,UAAU,CAACG,WAAX,GAAyBC,KAAzB,CAA+B,OAA/B,EAAwCC,OAAxC,CAAgD,SAAhD,KAA8D,CAD9D,IAEAH,OAAO,CAACC,WAAR,OAA0B,WAFjC;AAGD,GA9BU;AAgCXG,EAAAA,eAAe,EAAE,yBAASlB,OAAT,EAAkBmB,SAAlB,EAA6B;AAC5C1B,IAAAA,IAAI,CAACyB,eAAL,CAAqBlB,OAArB,EAA8BmB,SAA9B;AACD;AAlCU,CAAb;AAqCAC,MAAM,CAACC,OAAP,GAAiBxB,MAAjB","sourcesContent":["'use strict';\n\n// Protocol references:\n// \n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75\n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76\n// * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17\n\nvar Base   = require('./driver/base'),\n    Client = require('./driver/client'),\n    Server = require('./driver/server');\n\nvar Driver = {\n  client: function(url, options) {\n    options = options || {};\n    if (options.masking === undefined) options.masking = true;\n    return new Client(url, options);\n  },\n\n  server: function(options) {\n    options = options || {};\n    if (options.requireMasking === undefined) options.requireMasking = true;\n    return new Server(options);\n  },\n\n  http: function() {\n    return Server.http.apply(Server, arguments);\n  },\n\n  isSecureRequest: function(request) {\n    return Server.isSecureRequest(request);\n  },\n\n  isWebSocket: function(request) {\n    if (request.method !== 'GET') return false;\n\n    var connection = request.headers.connection || '',\n        upgrade    = request.headers.upgrade || '';\n\n    return request.method === 'GET' &&\n           connection.toLowerCase().split(/ *, */).indexOf('upgrade') >= 0 &&\n           upgrade.toLowerCase() === 'websocket';\n  },\n\n  validateOptions: function(options, validKeys) {\n    Base.validateOptions(options, validKeys);\n  }\n};\n\nmodule.exports = Driver;\n"]},"metadata":{},"sourceType":"script"}