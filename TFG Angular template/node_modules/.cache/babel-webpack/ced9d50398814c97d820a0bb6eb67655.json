{"ast":null,"code":"'use strict';\n\nvar parse = require('qs').parse;\n\nvar stringify = require('qs').stringify;\n\nmodule.exports = handleQs;\n\nfunction handleQs(url, query) {\n  url = url.split('?');\n  var start = url[0];\n  var qs = (url[1] || '').split('#')[0];\n  var end = url[1] && url[1].split('#').length > 1 ? '#' + url[1].split('#')[1] : '';\n  var baseQs = parse(qs);\n\n  for (var i in query) {\n    baseQs[i] = query[i];\n  }\n\n  qs = stringify(baseQs);\n\n  if (qs !== '') {\n    qs = '?' + qs;\n  }\n\n  return start + qs + end;\n}","map":{"version":3,"sources":["/home/juanma/Documentos/TecladoVirtual/TFG Angular template/node_modules/then-request/lib/handle-qs.js"],"names":["parse","require","stringify","module","exports","handleQs","url","query","split","start","qs","end","length","baseQs","i"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,KAA1B;;AACA,IAAIE,SAAS,GAAGD,OAAO,CAAC,IAAD,CAAP,CAAcC,SAA9B;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,QAAjB;;AACA,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5BD,EAAAA,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAN;AACA,MAAIC,KAAK,GAAGH,GAAG,CAAC,CAAD,CAAf;AACA,MAAII,EAAE,GAAG,CAACJ,GAAG,CAAC,CAAD,CAAH,IAAU,EAAX,EAAeE,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAT;AACA,MAAIG,GAAG,GAAGL,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAH,CAAOE,KAAP,CAAa,GAAb,EAAkBI,MAAlB,GAA2B,CAArC,GAAyC,MAAMN,GAAG,CAAC,CAAD,CAAH,CAAOE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAA/C,GAAsE,EAAhF;AAEA,MAAIK,MAAM,GAAGb,KAAK,CAACU,EAAD,CAAlB;;AACA,OAAK,IAAII,CAAT,IAAcP,KAAd,EAAqB;AACnBM,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYP,KAAK,CAACO,CAAD,CAAjB;AACD;;AACDJ,EAAAA,EAAE,GAAGR,SAAS,CAACW,MAAD,CAAd;;AACA,MAAIH,EAAE,KAAK,EAAX,EAAe;AACbA,IAAAA,EAAE,GAAG,MAAMA,EAAX;AACD;;AACD,SAAOD,KAAK,GAAGC,EAAR,GAAaC,GAApB;AACD","sourcesContent":["'use strict';\n\nvar parse = require('qs').parse;\nvar stringify = require('qs').stringify;\n\nmodule.exports = handleQs;\nfunction handleQs(url, query) {\n  url = url.split('?');\n  var start = url[0];\n  var qs = (url[1] || '').split('#')[0];\n  var end = url[1] && url[1].split('#').length > 1 ? '#' + url[1].split('#')[1] : '';\n\n  var baseQs = parse(qs);\n  for (var i in query) {\n    baseQs[i] = query[i];\n  }\n  qs = stringify(baseQs);\n  if (qs !== '') {\n    qs = '?' + qs;\n  }\n  return start + qs + end;\n}\n"]},"metadata":{},"sourceType":"script"}