{"ast":null,"code":"'use strict';\n\nvar request = require('sync-request');\n\nvar urlParse = require('url').parse;\n\nvar isImage = require('is-image');\n\nvar isUrl = require('is-url');\n\nmodule.exports = function (url, accurate, timeout) {\n  if (!url) return false;\n  var http = url.lastIndexOf('http');\n  if (http != -1) url = url.substring(http);\n  if (!isUrl(url)) return isImage(url);\n  var pathname = urlParse(url).pathname;\n  if (!pathname) return false;\n  var last = pathname.search(/[:?&]/);\n  if (last != -1) pathname = pathname.substring(0, last);\n  if (isImage(pathname)) return true;\n  if (/styles/i.test(pathname)) return false;\n\n  try {\n    if (!accurate) return false;\n    if (!timeout) timeout = 60000;\n    var res = request('GET', url, {\n      timeout: timeout\n    });\n    if (!res) return false;\n    var headers = res.headers;\n    if (!headers) return false;\n    var contentType = headers['content-type'];\n    if (!contentType) return false;\n    return contentType.search(/^image\\//) != -1;\n  } catch (e) {\n    return false;\n  }\n};","map":{"version":3,"sources":["/home/juanma/Documentos/TecladoVirtual/TFG Angular template/node_modules/is-image-url/index.js"],"names":["request","require","urlParse","parse","isImage","isUrl","module","exports","url","accurate","timeout","http","lastIndexOf","substring","pathname","last","search","test","res","headers","contentType","e"],"mappings":"AAAA;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,KAAD,CAAP,CAAeE,KAAhC;;AACA,IAAMC,OAAO,GAAGH,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,QAAD,CAArB;;AAEAK,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,QAAN,EAAgBC,OAAhB,EAA4B;AAC3C,MAAI,CAACF,GAAL,EAAU,OAAO,KAAP;AACV,MAAMG,IAAI,GAAGH,GAAG,CAACI,WAAJ,CAAgB,MAAhB,CAAb;AACA,MAAID,IAAI,IAAI,CAAC,CAAb,EAAgBH,GAAG,GAAGA,GAAG,CAACK,SAAJ,CAAcF,IAAd,CAAN;AAChB,MAAI,CAACN,KAAK,CAACG,GAAD,CAAV,EAAiB,OAAOJ,OAAO,CAACI,GAAD,CAAd;AACjB,MAAIM,QAAQ,GAAGZ,QAAQ,CAACM,GAAD,CAAR,CAAcM,QAA7B;AACA,MAAI,CAACA,QAAL,EAAe,OAAO,KAAP;AACf,MAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,CAAb;AACA,MAAID,IAAI,IAAI,CAAC,CAAb,EAAgBD,QAAQ,GAAGA,QAAQ,CAACD,SAAT,CAAmB,CAAnB,EAAsBE,IAAtB,CAAX;AAChB,MAAIX,OAAO,CAACU,QAAD,CAAX,EAAuB,OAAO,IAAP;AACvB,MAAI,UAAUG,IAAV,CAAeH,QAAf,CAAJ,EAA8B,OAAO,KAAP;;AAC9B,MAAI;AACF,QAAI,CAACL,QAAL,EAAe,OAAO,KAAP;AACf,QAAI,CAACC,OAAL,EAAcA,OAAO,GAAG,KAAV;AACd,QAAMQ,GAAG,GAAGlB,OAAO,CAAC,KAAD,EAAQQ,GAAR,EAAa;AAAEE,MAAAA,OAAO,EAAPA;AAAF,KAAb,CAAnB;AACA,QAAI,CAACQ,GAAL,EAAU,OAAO,KAAP;AACV,QAAMC,OAAO,GAAGD,GAAG,CAACC,OAApB;AACA,QAAI,CAACA,OAAL,EAAc,OAAO,KAAP;AACd,QAAMC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAA3B;AACA,QAAI,CAACC,WAAL,EAAkB,OAAO,KAAP;AAClB,WAAOA,WAAW,CAACJ,MAAZ,CAAmB,UAAnB,KAAkC,CAAC,CAA1C;AACD,GAVD,CAUE,OAAOK,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CAxBD","sourcesContent":["'use strict';\n\nconst request = require('sync-request');\nconst urlParse = require('url').parse;\nconst isImage = require('is-image');\nconst isUrl = require('is-url');\n\nmodule.exports = (url, accurate, timeout) => {\n  if (!url) return false;\n  const http = url.lastIndexOf('http');\n  if (http != -1) url = url.substring(http);\n  if (!isUrl(url)) return isImage(url);\n  let pathname = urlParse(url).pathname;\n  if (!pathname) return false;\n  const last = pathname.search(/[:?&]/);\n  if (last != -1) pathname = pathname.substring(0, last);\n  if (isImage(pathname)) return true;\n  if (/styles/i.test(pathname)) return false;\n  try {\n    if (!accurate) return false;\n    if (!timeout) timeout = 60000;\n    const res = request('GET', url, { timeout });\n    if (!res) return false;\n    const headers = res.headers;\n    if (!headers) return false;\n    const contentType = headers['content-type'];\n    if (!contentType) return false;\n    return contentType.search(/^image\\//) != -1;\n  } catch (e) {\n    return false;\n  }\n};"]},"metadata":{},"sourceType":"script"}